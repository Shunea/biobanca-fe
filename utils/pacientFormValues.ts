import { ServerPacient } from "@/features/formulare/types";

export const pacientFormValues = (pacient: ServerPacient | null) => {
  if (!pacient) return undefined;

  return {
    pacientStep1: {
      cetatenie: pacient.cetatenie,
      etnie:pacient.etnie,
      rh:pacient.rh,
      data_nasterii: pacient.data_nasterii,
      loc_de_munca: pacient.loc_de_munca,
      IDNP: pacient.IDNP,
      IMSP: pacient.IMSP,
      imsp_id: pacient.imsp_id,
      statut: pacient.statut,
      loc_de_trai: pacient.loc_de_trai,
      nume: pacient.nume,
      patronimicul: pacient.patronimicul,
      prenume: pacient.prenume,
      rp_mn: pacient.rp_mn,
      rp_localitate: pacient.rp_localitate,
      rp_strada: pacient.rp_strada,
      sex: pacient.sex,
      varsta: pacient.varsta,
      nr_proba:pacient.nr_proba,
      tip_proba:pacient.tip_proba,
      biospecimen_prelevat:pacient.biospecimen_prelevat,
      data_prelevarii:pacient.data_prelevarii,
      persoana_prelevarii:pacient.persoana_prelevarii,
      data_receptionare:pacient.data_receptionare,
      persoana_receptionare:pacient.persoana_receptionare,
      sursa_provenienta_proba:pacient.sursa_provenienta_proba,
      lucreaza: pacient.lucreaza,
      profesie_specializare: pacient.profesie_specializare,
      grupa_sangvina:pacient.grupa_sangvina,
      cantitate_proba:pacient.cantitate_proba,
      unitate_masura:pacient.unitate_masura,
    },
    pacientStep2: {
      casatorit: pacient.casatorit,
      stare_generala:pacient.stare_generala,
      perioada_maturizarii_sexuale: pacient.perioada_maturizarii_sexuale,
      nr_sarcini: pacient.nr_sarcini,
      nr_nasteri: pacient.nr_nasteri,
      nr_avorturi: pacient.nr_avorturi,
      aparitia_perioadei_de_menopauza: pacient.aparitia_perioadei_de_menopauza,
      cod_si_diagnostic: pacient.cod_si_diagnostic,
      comorbiditati: pacient.comorbiditati,
      fumeaza:pacient.fumeaza,
      consum_alcool:pacient.consum_alcool,
      subst_narc:pacient.subst_narc,
      ce_cantitate_fumeaza:pacient.ce_cantitate_fumeaza,
      de_cati_ani_fumeaza:pacient.de_cati_ani_fumeaza,
      ce_cantitate_alcool:pacient.ce_cantitate_alcool,
      de_cati_ani_alcool:pacient.de_cati_ani_alcool,
      ce_cantitate_narcotice:pacient.ce_cantitate_narcotice,
      de_cati_ani_narcotice:pacient.de_cati_ani_narcotice,
      alte_deprinderi_daunatoare:pacient.alte_deprinderi_daunatoare,
      anamneza_alergologica:pacient.anamneza_alergologica,
      TA: pacient.TA,
      inaltime: pacient.inaltime,
      greutate: pacient.greutate,
      puls: pacient.puls,
      tip_proiect:pacient.tip_proiect,
      boli_autoimune:pacient.boli_autoimune,
    },
    pacientStep3: {
      Lezarea_organelor_şi_sistemelor_în_care_au_fost_depistate_dereglări_patologice_la_bolnavul_examinat: pacient.Lezarea_organelor_şi_sistemelor_în_care_au_fost_depistate_dereglări_patologice_la_bolnavul_examinat,
        venerice:pacient.venerice,
        psiho_neurologice:pacient.psiho_neurologice,
        alergice:pacient.alergice,
        endocrine:pacient.endocrine,
        boli_schimb_substante:pacient.boli_schimb_substante,
        alcoolism:pacient.alcoolism,
        neoplasme:pacient.neoplasme,
        boli_hematopoetice:pacient.boli_hematopoetice,
        cauza_decesului_parinti: pacient.cauza_decesului_parinti,
        cauza_decesului_copii: pacient.cauza_decesului_copii,
        cauza_decesului_rude: pacient.cauza_decesului_rude,
        varsta_parinti:pacient.varsta_parinti,
        varsta_copii:pacient.varsta_copii,
        varsta_rude:pacient.varsta_rude,
        stare_parinti:pacient.stare_parinti,
        stare_copii:pacient.stare_copii,
        stare_rude:pacient.stare_rude,
        boli_parinti:pacient.stare_parinti,
        boli_copii:pacient.stare_copii,
        boli_rude:pacient.stare_rude,
        rude:pacient.rude,
        relatii_in_familie:pacient.relatii_in_familie,
        sex_boli_copii:pacient.sex_boli_copii,
        sex_boli_parinti:pacient.sex_boli_parinti,
        sex_parinti:pacient.sex_parinti,
        sex_copii:pacient.sex_copii,
    },
    pacientStep4: {
      cantitate_de_biospecimen_per_proba_alicotata: pacient.cantitate_de_biospecimen_per_proba_alicotata,
      nr_parti: pacient.nr_parti,
      alicotata: pacient.alicotata,
      cantitate_proba:pacient.cantitate_proba
    },
    pacientStep5: {
      zona_probei: pacient.zona_probei,
    dimensiune_proba:pacient.dimensiune_proba,
    frigider: pacient.frigider,
    rand: pacient.rand,
    coloana: pacient.coloana,
    nr_proba: pacient.nr_proba,
    nr_cutie: pacient.nr_cutie,
    },
  };
};
